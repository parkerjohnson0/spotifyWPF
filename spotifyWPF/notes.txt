TEST SELECTEDPLAYLIST FOR STYLING
active true
image https://i.scdn.co/image/ab67706c0000bebb18b830788ea8914e1da3292d
name Retrowave/Synthwave
link https://api.spotify.com/v1/playlists/3ebHKSjHujS4Tyt2KKP97R/tracks
owner Cheerzo

ISSUES
localhost redirection is annoying me. make some kinda actual page to show that it was successful?
viewmodels may have to pass data back and forth to cut down on API calls
    EG. NavVM makes call to get all playlists, parse and send api song list endpoint to RootVM whenever playlist link is clicked.
    
recreating friends list functionality
    endpoint for this data is only available through an undocumented endpoint. requires different token to access. 


how to get very different views to be displayed in the root panel
	have it contain just a base items control? that changes from styling? based off the underlying model type of the bound collection?


why is overriding the default scrollbar style so ridiculously annoying
	have to copy paste 150 lines from the default template. 
    
after a few days I have confirmed my biases against stackoverflow's dogmatic mvvm nerds
bugs that are quite worth trying to fix yet
    volume slider grows if dragged to 100
todo
remove devices code from playervm. it will need devices data at some point, but will get it from appstate
selecting playlist should deselect other home/lib/search and vice versa
some characters are showing as unicode
    HttpUtility.HtmlDecode from a quick google maybe?
clean up some stuff from rootvm
play/pause buttons icons do not resize on hover
give each vm authorized property which returns from static app.authorized
add authorization to each control that should be blurred and disabled before auth 
	not quite ready to work yet. property wont update 
make auth blur look better. add vignette to background
disable interaction with UI until authorized
use pkce auth flow. so that way token can be stored for longer. otherwise would have to refresh token every hour if access token not replace with refresh token. 

long term
    create service to access spotify api. introduce rate limiting and retries
    recreate the scrolling text name for songs when a track's name is too long
    do I have to do all these events? i think some could be replaced
    should be able to remove the 'Active' property on track. Just use IsSelected on the listviewitem template like I did for devices
    refactor to include a master viewmodel that holds appstate, and all the other viewmodels. so the setters within each vm can just update appstate of master vm
    use interactions instead of mousebindings. for more C O N T R O L 
    make each segment of playeruc into its own control
    add caching to api calls dont have to be made to playlists all the time
        how to check if can use cached version or have to make api call?
    set max length to gridsplitter 
    make custom listview that will load data as needed as opposed to all at once (lol)
    create fake gridsplitter. make width 10px, but transparent. change border of hovered panel to emulate look. emulate real spotify thing
	store a certain amout of playlists so api doesnt have to be called too much
	save to file. startup roottemplate should be last selected
	look into using more dependency properties


COMPLETED
    ROOTVM GETTING MADE TWICE SO UPDATE EVENTS TRIGGERING TOO MUCH
    SOLUTION: PROBABLY CHANGE ROOTWINDOW TO USE ITS OWNVM

THINGS I DONT LIKE
    VMs passing data through appstate feels a little funky
    The way the device control is being closed when focus lost is very funky. is being faked by manually checking if mouse has been clicked outside of control 
    